/*Each new term in the Fibonacci sequence is generated by adding the 
* previous two terms. By starting with 1 and 2, the first 10 terms will be:
*
* 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
*
* By considering the terms in the Fibonacci sequence whose values do not 
* exceed four million, find the sum of the even-valued terms.
*/

public class ID2{
  public static void main(String[] args){
    
    // first and second hold the first and second numbers in the sequence respectively
    int first = 1;
    int second = 2;

    // temp will be used to move a number from second to first as we iterate
    // through the sequence
    int temp = 0;

    // will hold the sum of all even numbers in the sequence under 4,000,000
    int sum = 0;

    // while loops stops iterations once the second number passes 4,000,000
    while (second<=4000000){

      // if statements adds second to sum if it is even by testing the remainder
      if (second % 2 ==0){
        sum += second;
      }

      // move second to temp, update second with new number, move temp (old second)
      // to first
      temp = second;
      second += first;
      first = temp;
    }
    
    //print sum
    System.out.println(sum);

  }
}
